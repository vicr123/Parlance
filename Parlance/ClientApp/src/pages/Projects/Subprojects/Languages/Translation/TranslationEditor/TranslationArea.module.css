.statusAlert {
    padding: 9px;
    border-bottom: 1px solid var(--border-color);
}

.translationArea {
    grid-area: translationArea;

    display: flex;
}

:global(.ltr) .translationArea {
    border-right: 1px solid var(--border-color);
}

:global(.rtl) .translationArea {
    border-left: 1px solid var(--border-color);
}

.translationAreaInner {
    grid-area: translationArea;

    display: flex;
    flex-direction: column;
    flex-grow: 1;

    position: sticky;
    top: 0;
}

.sourceTranslationContainer {
    padding: 9px;
    border-bottom: 1px solid var(--border-color);
}

.sourceTranslationContainerInner {
    min-height: 100px;
}

.sourceTranslation {
    white-space: pre-wrap;
    font-size: 12pt;
}

.sourceTranslationIndicator {
    font-size: 10pt;
    text-transform: uppercase;
    padding-bottom: 3px;
}

.translationContainer {
    display: flex;
    flex-direction: column;
    border-bottom: 1px solid var(--border-color);
}

.translationPart {
    padding: 9px;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: max-content max(100px, max-content);
    gap: 0px 0px;
    grid-template-areas: 
        "heading"
        "translationArea";
}

.translationPartIndicator {
    grid-area: heading;
    padding-bottom: 3px;
    font-size: 10pt;
    text-transform: uppercase;
}

.translationPartEditor {
    grid-area: translationArea;
    border: none;

    font-family: 'Contemporary';
    font-size: 12pt;

    margin: 0;
    padding: 0;
}

.translationPartEditorTextarea {
    z-index: 5;
    color: transparent;
    background-color: transparent;
    caret-color: var(--foreground-color);
    outline: none;
}

.checksContainer {
    display: flex;
    flex-direction: column;
    gap: 6px;
    padding-top: 12px;
}

.checkItem {
    display: flex;
    gap: 6px;
    align-items: center;
}

.checkWarn {
    /*color: black;*/
    /*background-color: rgb(255, 150, 0);*/
}

.checkError {
    /*color: white;*/
    /*background-color: rgb(200, 0, 0);*/
}

.checkIcon {
    display: inline-flex;
    align-items: center;
}

.checkIcon:before {
    height: 16px;
    width: 16px;
}

.checkWarn .checkIcon:before {
    content: url("Images/warn.svg");
}

.checkError .checkIcon:before {
    content: url("Images/stop.svg");
}

.translationPreview {
    color: var(--foreground-disabled-color);
}

.translationPartIndicatorExtras {
    color: var(--foreground-disabled-color);
}

.controls {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    border-top: 1px solid var(--border-color);
}

.controlArea {
    display: flex;
    flex-direction: row;
}

:global(.ltr) .controlArea:first-child {
    border-right: 1px solid var(--border-color);
}

:global(.ltr) .controlArea:last-child {
    border-left: 1px solid var(--border-color);
}

:global(.rtl) .controlArea:first-child {
    border-left: 1px solid var(--border-color);
}

:global(.rtl) .controlArea:last-child {
    border-right: 1px solid var(--border-color);
}

.navButtonContents {
    display: flex;
    flex-direction: column;
}

.navButtonSource {
    font-size: 10pt;
    color: var(--foreground-disabled-color);
}

.keyContainer {
    display: flex;
    flex-direction: row;
    justify-content: flex-end;

    font-size: 10pt;
    color: var(--foreground-disabled-color);
}

.keyText {
    display: inline-block;
    max-width: 300px;
    text-overflow: ellipsis;
    overflow-x: hidden;
}

.controlsContainerWrapper {
    height: 0;
}

.controlsContainer {
    display: none;

    position: absolute;
    right: 0;
    padding: 9px;
    background-color: var(--background-color);
    border-left: 1px solid var(--border-color);
    border-bottom: 1px solid var(--border-color);

    flex-direction: row;
    gap: 6px;

    z-index: 500;
}

.translationContainer.focus .controlsContainer {
    display: flex;
}

.backButton {
    display: none;
}

.commentsButton {
    display: flex;
    align-items: center;
    justify-content: space-between;

    padding: 6px;
    border-bottom: 1px solid var(--border-color);
    cursor: default;
}

.commentsButton:hover {
    background-color: var(--hover-color);
}

.commentsButton:active {
    background-color: var(--active-color);
}

@media (max-width: 1024px) {
    .translationArea {
        position: fixed;
        background-color: var(--background-color);
        bottom: 0;
        left: 0;
        right: 0;
        height: 0;

        border-right: none;
        border-top: 1px solid var(--border-color);
        box-sizing: border-box;

        z-index: 2;

        transition: height 0.25s ease-out;
    }

    .translationAreaInner {
        height: calc(100vh - 200px);
    }

    .backButton {
        display: block;
    }

    .translationArea.haveKey {
        height: calc(100vh - 200px);
        max-height: calc(100vh - 200px);
    }
}